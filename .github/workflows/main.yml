name: dipu_poc  ci
on:
  push:
    branches:
      - '**'
    tags:
      - '**'
  pull_request:
    branches:
      - 'main'

env:
  NFS_PATH: '/mnt/cache/share/parrotsci/github/cibuild/${{ github.repository }}'
  ENV_PATH: '/mnt/cache/share/platform/cienv'
  ENV_NAME: 'dipu_poc'
  SLURM_PAR_CAMB: ${{ secrets.SLURM_PAR_CAMB }}
  CLUSTER_CAMB: CAMB
  CI_BUILD_DIR: "/mnt/cache/share/parrotsci/github/cibuild"
  PYTORCH_DIR: "/mnt/cache/share/parrotsci/github/cibuild/pytorch"
  CI_BUILD_FLAG: "ci_build_flag"
  PYTORCH_COMMIT: "680efdb8400bbbf741d6a2e8afaa1fa0bf99f352"
  DIOPI_COMMIT: "7ec02a31440857fed9405fda8d519d4dee8c17e4"

jobs:
  Rsync:
    name: Rsync code
    runs-on: github-poc-ci
    steps:
      - name: clone repo and rsync pytorch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          token: ${{ secrets.CI_TOKEN }}
          fetch-depth: '0'
          submodules: 'true'
      - name: Rsync to Server
        run: |
          cd ${GITHUB_WORKSPACE}/ && rm -rf DIOPI-TEST && git clone git@github.com:OpenComputeLab/DIOPI-TEST.git \
          && cd DIOPI-TEST && git checkout main && git pull && git checkout ${DIOPI_COMMIT} && git submodule update --init --recursive
          cd /home/autolink/rsync/sourcecode/pytorch && git checkout master && git pull \
          && git checkout ${PYTORCH_COMMIT} && git submodule update --init --recursive
          ssh ${CLUSTER_CAMB} "mkdir -p ${NFS_PATH}/${GITHUB_RUN_NUMBER}/source"
          ssh ${CLUSTER_CAMB} "mkdir -p ${NFS_PATH}/${GITHUB_RUN_NUMBER}/DIOPI-TEST"
          rsync -a --delete ${GITHUB_WORKSPACE}/DIOPI-TEST/ ${CLUSTER_CAMB}:${NFS_PATH}/${GITHUB_RUN_NUMBER}/DIOPI-TEST/
          rsync -a --delete ${GITHUB_WORKSPACE}/ ${CLUSTER_CAMB}:${NFS_PATH}/${GITHUB_RUN_NUMBER}/source/
          result=`ssh ${CLUSTER_CAMB} """
                  if [ ! -f ${PYTORCH_DIR}/${CI_BUILD_FLAG} ]; then
                    touch ${PYTORCH_DIR}/${CI_BUILD_FLAG}
                  fi
                  cat ${PYTORCH_DIR}/${CI_BUILD_FLAG}
                  """`
          echo "result:${result}"
          if [ "${result}x" = "${PYTORCH_COMMIT}"x ]; then
            echo "pytorch exist."
          else
            echo "pytorch not exist, copy pytorch to ${PYTORCH_DIR}"
            ssh ${CLUSTER_CAMB} "rm -rf ${PYTORCH_DIR}"
            rsync -a --delete /home/autolink/rsync/sourcecode/pytorch ${CLUSTER_CAMB}:${CI_BUILD_DIR}/
          fi

  # Lint-C-Python:
  #   name: Lint c python
  #   runs-on: github-poc-ci
  #   needs: [Rsync]
  #   env:
  #     MLU_REQUESTS: 0
  #   steps:
  #     - name: lint-c-python
  #       run: |
  #         ssh ${CLUSTER_CAMB} """
  #         set -e
  #         cd ${NFS_PATH}/ && ls -al && find ${NFS_PATH}/ -maxdepth 1 -ctime 1 -type d |xargs rm -rf
  #         source /mnt/lustre/share/platform/env/${ENV_NAME}
  #         cd ${NFS_PATH}/${GITHUB_RUN_NUMBER} && rm -rf ${GITHUB_JOB} && cp -R source ${GITHUB_JOB} && cd ${GITHUB_JOB}
  #         srun --job-name=${GITHUB_JOB} --partition=${SLURM_PAR_CAMB} -x HOST-10-142-4-[193-194] bash scripts/ci_lint.sh py-lint &&
  #         bash scripts/ci_lint.sh cpp-lint &&  cd ${NFS_PATH}/${GITHUB_RUN_NUMBER}/ && rm -rf ${GITHUB_JOB} || ( cd ${NFS_PATH}/${GITHUB_RUN_NUMBER}/ && rm -rf ${GITHUB_JOB} && exit 1 )
  #         """

  Build-Pytorch:
    name: Build pytorch
    needs: [Rsync]
    runs-on: github-poc-ci
    env:
      MLU_REQUESTS: 0
    steps:
      - name: Build pytorch
        run: |
          ssh ${CLUSTER_CAMB} """
          set -e
          cd ${PYTORCH_DIR}
          echo "pwd: $(pwd)"
          if [ -f ${PYTORCH_DIR}/${CI_BUILD_FLAG} ]; then
            echo "${PYTORCH_DIR} has been successfully compiled."
          else
            source /mnt/lustre/share/platform/env/${ENV_NAME}
            mkdir -p build && make clean
            export CMAKE_PREFIX_PATH=${CONDA_PREFIX:-"$(dirname $(which conda))/../"}
            BUILD_BINARY=0 USE_PRECOMPILED_HEADERS=1 BUILD_TEST=0
            srun --job-name=${GITHUB_JOB} --partition=${SLURM_PAR_CAMB} -x HOST-10-142-4-[193-194] --time=40 \
            --gres=mlu:${MLU_REQUESTS} python setup.py install --prefix=./install_path
            echo "${PYTORCH_COMMIT}" > ${CI_BUILD_FLAG}
          fi
          """

  Build-DIOPI-IMPL-Camb:
    name: Build diopi-impl camb
    needs: [Rsync]
    runs-on: github-poc-ci
    env:
      MLU_REQUESTS: 1
    steps:
      - name: Build diopi&&dipu
        run: |
          ssh ${CLUSTER_CAMB} """
          set -e
          source /mnt/lustre/share/platform/env/${ENV_NAME}
          cd ${NFS_PATH}/${GITHUB_RUN_NUMBER}/DIOPI-TEST
          srun --job-name=${GITHUB_JOB} --partition=${SLURM_PAR_CAMB} -x HOST-10-142-4-[193-194] --time=40 \
          --gres=mlu:${MLU_REQUESTS} sh scripts/build_impl.sh camb_no_runtime \
          || ( cd ${NFS_PATH}/${GITHUB_RUN_NUMBER}/ && rm -rf ${GITHUB_JOB} && exit 1 )
          """

  Build-POC-Camb:
    name: Build diopi_poc camb
    needs: [Build-Pytorch, Build-DIOPI-IMPL-Camb]
    runs-on: github-poc-ci
    env:
      MLU_REQUESTS: 1
    steps:
      - name: Build diopi-poc
        run: |
          ssh ${CLUSTER_CAMB} """
          set -e
          source /mnt/lustre/share/platform/env/${ENV_NAME}
          cd ${NFS_PATH}/${GITHUB_RUN_NUMBER}/ && rm -rf ${GITHUB_JOB} && cp -R source ${GITHUB_JOB}  && cd ${GITHUB_JOB}
          source scripts/ci_camb_env.sh
          srun --job-name=${GITHUB_JOB} --partition=${SLURM_PAR_CAMB} -x HOST-10-142-4-[193-194] --time=40 \
          --gres=mlu:${MLU_REQUESTS} bash scripts/ci_camb_script.sh build_dipu \
          || ( cd ${NFS_PATH}/${GITHUB_RUN_NUMBER}/ && rm -rf ${GITHUB_JOB} && exit 1 )
          """

  Test-Camb:
    name: test-camb
    needs: [Build-POC-Camb]
    runs-on: github-poc-ci
    env:
      MLU_REQUESTS: 1
    steps:
      - name: Run-test
        run: |
          ssh ${CLUSTER_CAMB} """
          set -e
          source /mnt/lustre/share/platform/env/${ENV_NAME}
          cd ${NFS_PATH}/${GITHUB_RUN_NUMBER}/ && cd Build-POC-Camb
          source scripts/ci_camb_env.sh
          srun --job-name=${GITHUB_JOB} --partition=${SLURM_PAR_CAMB} -x HOST-10-142-4-[193-194] --time=40 --gres=mlu:${MLU_REQUESTS} sh tests/run_camb_tests.sh
          """
