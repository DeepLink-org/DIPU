name: dipu_poc  ci
on:
  workflow_dispatch:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - 'main'

env:
  NFS_PATH: '/mnt/lustre/share/parrotsci/github/cibuild/${{ github.repository }}'
  SLURM_PAR_CAMB: ${{ secrets.SLURM_PAR_CAMB }}
  CLUSTER_CAMB: CAMB
  PYTORCH_BASE_DIR: '/mnt/lustre/share/parrotsci/github/cibuild/pytorchbase'
  CI_BUILD_FLAG: "ci_build_flag"
  PYTORCH_COMMIT: ${{ vars.PYTORCH_COMMIT }}  # pytorch tag 2.0
  NV_PVC_PATH: '/nvme/share/share/github/cibuild/${{ github.repository }}'
  NV_SOURCE_PATH: '/nvme/share/share/github/sourcecode'


jobs:
  Rsync:
    name: Rsync code
    runs-on: github-poc-ci
    steps:
      - name: clone repo
        run: |
          cd ${GITHUB_WORKSPACE} && rm -rf dipu_poc dipu_poc_diopi && git clone https://github.com/DeepLink-org/dipu_poc.git && cd dipu_poc
          if [ $GITHUB_EVENT_NAME == "pull_request" ]; then
          git checkout ${{ github.event.pull_request.head.sha }} && git merge --no-edit main
          else
          git checkout ${{ github.sha }} &&  git merge --no-edit main
          fi
          cd ${GITHUB_WORKSPACE} && cp -R dipu_poc dipu_poc_diopi
          cd ${GITHUB_WORKSPACE}/dipu_poc && rm -rf third_party/DIOPI && git submodule update --init --recursive
          cd ${GITHUB_WORKSPACE}/dipu_poc_diopi/third_party && rm -rf DIOPI && git clone https://github.com/DeepLink-org/DIOPI.git
      - name: ci interruptible and support pr ci
        run: |
          cd ${GITHUB_WORKSPACE}/dipu_poc && bash scripts/ci_interruptible.sh
        env:
          GITHUB_TOKEN: "${{ secrets.CI_TOKEN }}"
      - name: Rsync to Server
        run: |
          echo ${GITHUB_WORKSPACE}
          cd /home/autolink/rsync/sourcecode/pytorch && git checkout master && git pull \
          && git checkout ${PYTORCH_COMMIT} && git submodule update --init --recursive
          ssh ${CLUSTER_CAMB} "mkdir -p ${NFS_PATH}/${GITHUB_RUN_NUMBER}/source ${NFS_PATH}/${GITHUB_RUN_NUMBER}/source-main"
          rsync -a --delete ${GITHUB_WORKSPACE}/dipu_poc/ ${CLUSTER_CAMB}:${NFS_PATH}/${GITHUB_RUN_NUMBER}/source/
          rsync -a --delete ${GITHUB_WORKSPACE}/dipu_poc_diopi/ ${CLUSTER_CAMB}:${NFS_PATH}/${GITHUB_RUN_NUMBER}/source-main/
          result=`ssh ${CLUSTER_CAMB} """
                  mkdir -p ${PYTORCH_BASE_DIR}/${PYTORCH_COMMIT}
                  cd ${PYTORCH_BASE_DIR}/${PYTORCH_COMMIT}
                  if [ ! -f ${CI_BUILD_FLAG} ]; then
                    touch ${CI_BUILD_FLAG}
                  fi
                  cat ${CI_BUILD_FLAG}
                  """`
          echo "result:${result}"
          if [ "${result}x" = "${PYTORCH_COMMIT}"x ]; then
            echo "pytorch:${PYTORCH_BASE_DIR}/${PYTORCH_COMMIT} exist."
          else
            echo "pytorch not exist, copy pytorch to ${PYTORCH_BASE_DIR}/${PYTORCH_COMMIT}"
            ssh ${CLUSTER_CAMB} "rm -rf ${PYTORCH_BASE_DIR}/${PYTORCH_COMMIT}"
            rsync -a --delete /home/autolink/rsync/sourcecode/pytorch/* ${CLUSTER_CAMB}:${PYTORCH_BASE_DIR}/${PYTORCH_COMMIT}/
          fi

  Build-Pytorch:
    name: Build pytorch
    needs: [Rsync]
    runs-on: github-poc-ci
    env:
      MLU_REQUESTS: 0
    steps:
      - name: Build pytorch
        run: |
          ssh ${CLUSTER_CAMB} """
          set -e
          cd ${NFS_PATH}/${GITHUB_RUN_NUMBER}/source
          source scripts/ci_camb_env.sh
          cd ${PYTORCH_BASE_DIR}/${PYTORCH_COMMIT}
          echo "pwd: $(pwd)"
          if [ -f ${CI_BUILD_FLAG} ]; then
            echo "${PYTORCH_BASE_DIR}/${PYTORCH_COMMIT} has been successfully compiled."
          else
            mkdir -p build && make clean
            export CMAKE_PREFIX_PATH=${CONDA_PREFIX:-"$(dirname $(which conda))/../"}
            BUILD_BINARY=0 USE_PRECOMPILED_HEADERS=1 BUILD_TEST=0
            srun --job-name=${GITHUB_JOB} --partition=${SLURM_PAR_CAMB} --time=40 \
            --gres=mlu:${MLU_REQUESTS} python setup.py install --prefix=./install_path
            echo "${PYTORCH_COMMIT}" > ${CI_BUILD_FLAG}
          fi
          """

  Build-POC-Camb:
    name: Build diopi_poc camb
    needs: [Build-Pytorch]
    runs-on: github-poc-ci
    env:
      MLU_REQUESTS: 1
    steps:
      - name: Build dipu-poc
        run: |
          ssh ${CLUSTER_CAMB} """
          set -e
          cd ${NFS_PATH}/${GITHUB_RUN_NUMBER}/ && rm -rf ${GITHUB_JOB} && cp -R source ${GITHUB_JOB}  && cd ${GITHUB_JOB}
          export PYTORCH_DIR=${PYTORCH_BASE_DIR}/${PYTORCH_COMMIT}
          source scripts/ci_camb_env.sh
          srun --job-name=${GITHUB_JOB} --partition=${SLURM_PAR_CAMB} --time=40 \
          --gres=mlu:${MLU_REQUESTS} bash scripts/ci_camb_script.sh build_dipu \
          || ( cd ${NFS_PATH}/${GITHUB_RUN_NUMBER}/ && rm -rf ${GITHUB_JOB} && exit 1 )
          """

  Test-Camb:
    name: test-camb
    needs: [Build-POC-Camb]
    runs-on: github-poc-ci
    env:
      MLU_REQUESTS: 1
    steps:
      - name: Run-test
        run: |
          ssh ${CLUSTER_CAMB} """
          set -e
          cd ${NFS_PATH}/${GITHUB_RUN_NUMBER}/ && cd Build-POC-Camb
          export PYTORCH_DIR=${PYTORCH_BASE_DIR}/${PYTORCH_COMMIT}
          source scripts/ci_camb_env.sh
          srun --job-name=${GITHUB_JOB} --partition=${SLURM_PAR_CAMB} --time=40 --gres=mlu:${MLU_REQUESTS} sh tests/run_camb_tests.sh
          """

  Build-POC-Camb-Diopi:
    name: Build diopi_poc camb diopi-main
    needs: [Build-Pytorch]
    runs-on: github-poc-ci
    env:
      MLU_REQUESTS: 1
    steps:
      - name: Build dipu-poc diopi-main
        run: |
          ssh ${CLUSTER_CAMB} """
          set -e
          cd ${NFS_PATH}/${GITHUB_RUN_NUMBER}/ && rm -rf ${GITHUB_JOB} && cp -R source-main ${GITHUB_JOB}  && cd ${GITHUB_JOB}
          export PYTORCH_DIR=${PYTORCH_BASE_DIR}/${PYTORCH_COMMIT}
          source scripts/ci_camb_env.sh
          srun --job-name=${GITHUB_JOB} --partition=${SLURM_PAR_CAMB} --time=40 \
          --gres=mlu:${MLU_REQUESTS} bash scripts/ci_camb_script.sh build_dipu \
          || ( cd ${NFS_PATH}/${GITHUB_RUN_NUMBER}/ && rm -rf ${GITHUB_JOB} && exit 1 )
          """

  Test-Camb-Diopi:
    name: test-camb-diopi-main
    needs: [Build-POC-Camb-Diopi]
    runs-on: github-poc-ci
    env:
      MLU_REQUESTS: 1
    steps:
      - name: Run-test
        run: |
          ssh ${CLUSTER_CAMB} """
          set -e
          cd ${NFS_PATH}/${GITHUB_RUN_NUMBER}/ && cd Build-POC-Camb-Diopi
          export PYTORCH_DIR=${PYTORCH_BASE_DIR}/${PYTORCH_COMMIT}
          source scripts/ci_camb_env.sh
          srun --job-name=${GITHUB_JOB} --partition=${SLURM_PAR_CAMB} --time=40 --gres=mlu:${MLU_REQUESTS} sh tests/run_camb_tests.sh && rm -rf Build-POC-Cuda-Diopi \
          || ( cd ${NV_PVC_PATH}/${GITHUB_RUN_NUMBER}/ && rm -rf Build-POC-Cuda-Diopi && exit 1 )
          """

  Test-One-Iter-Camb:
    name: test-one-iter-camb
    needs: [Build-POC-Camb]
    runs-on: github-poc-ci
    env:
      MLU_REQUESTS: 1
    steps:
      - name: clone-repos
        run: |
          cd ${GITHUB_WORKSPACE} && rm -rf dipu_poc && git clone https://github.com/DeepLink-org/dipu_poc.git && cd dipu_poc
          if [ $GITHUB_EVENT_NAME == "pull_request" ]; then
            git checkout ${{ github.event.pull_request.head.sha }} && git merge --no-edit main
          else
            git checkout ${{ github.sha }} &&  git merge --no-edit main
          fi
          bash scripts/ci_one_iter.sh clone
          rsync -a --include='mmagic/***' --include='mmocr/***' --include='mmpose/***' --include='mmdetection3d/***' --include='mmaction2/***' --include='mmsegmentation/***' --include='mmcv/***' --include='mmpretrain/***' --include='mmdetection/***' --include='mmengine/***' --include='SMART/***' --exclude='*' ${GITHUB_WORKSPACE}/ ${CLUSTER_CAMB}:${NFS_PATH}/${GITHUB_RUN_NUMBER}/Build-POC-Camb/



      - name: run-one-iter-tools
        run: |
          ssh ${CLUSTER_CAMB} """
          set -e
          cd ${NFS_PATH}/${GITHUB_RUN_NUMBER}/Build-POC-Camb
          export PYTORCH_DIR=${PYTORCH_BASE_DIR}/${PYTORCH_COMMIT}
          source scripts/ci_camb_env.sh
          echo  "python path : ${PYTHONPATH}"
          export PYTHONPATH=${NFS_PATH}/${GITHUB_RUN_NUMBER}/Build-POC-Camb/mmagic:${NFS_PATH}/${GITHUB_RUN_NUMBER}/Build-POC-Camb/mmpretrain:${NFS_PATH}/${GITHUB_RUN_NUMBER}/Build-POC-Camb/mmaction2:${NFS_PATH}/${GITHUB_RUN_NUMBER}/Build-POC-Camb/mmocr:${NFS_PATH}/${GITHUB_RUN_NUMBER}/Build-POC-Camb/mmpose:${NFS_PATH}/${GITHUB_RUN_NUMBER}/Build-POC-Camb/mmsegmentation:${NFS_PATH}/${GITHUB_RUN_NUMBER}/Build-POC-Camb/mmdetection3d:${NFS_PATH}/${GITHUB_RUN_NUMBER}/Build-POC-Camb/mmdetection:${NFS_PATH}/${GITHUB_RUN_NUMBER}/Build-POC-Camb/mmengine:${NFS_PATH}/${GITHUB_RUN_NUMBER}/Build-POC-Camb/mmcv:${NFS_PATH}/${GITHUB_RUN_NUMBER}/Build-POC-Camb/SMART/tools/one_iter_tool/one_iter:$PYTHONPATH
          srun --job-name=${GITHUB_RUN_NUMBER}_${GITHUB_JOB} --partition=${SLURM_PAR_CAMB} --gres=mlu:${MLU_REQUESTS} sh scripts/ci_one_iter.sh build_camb 
          pwd
          srun --job-name=${GITHUB_JOB} --partition=${SLURM_PAR_CAMB}  --gres=mlu:${MLU_REQUESTS} sh scripts/ci_camb_run_one_iter.sh && rm -rf one_iter_data || (rm -rf one_iter_data && exit 1)
          """

  Clone:
    name: clone code on cuda
    needs: [Rsync]
    runs-on: tps-pytorch-ci
    steps:
      - name: clone repo
        run: |
          set -e
          cd ${NV_PVC_PATH} && find ${NV_PVC_PATH}/ -maxdepth 1 -ctime 1 -type d |xargs rm -rf
          rm -rf ${GITHUB_RUN_NUMBER} && mkdir -p ${GITHUB_RUN_NUMBER} && cd ${GITHUB_RUN_NUMBER}
          rm -rf dipu_poc && git clone https://github.com/DeepLink-org/dipu_poc.git && cd dipu_poc
          if [ $GITHUB_EVENT_NAME == "pull_request" ]; then
          git checkout ${{ github.event.pull_request.head.sha }} && git merge --no-edit main
          else
          git checkout ${{ github.sha }} &&  git merge --no-edit main
          fi
          cd ${NV_PVC_PATH}/${GITHUB_RUN_NUMBER} && cp -R dipu_poc dipu_poc_diopi
          cd ${NV_PVC_PATH}/${GITHUB_RUN_NUMBER}/dipu_poc_diopi/third_party && rm -rf DIOPI && git clone https://github.com/DeepLink-org/DIOPI.git
          cd ${NV_PVC_PATH}/${GITHUB_RUN_NUMBER}/dipu_poc && rm -rf third_party/DIOPI && git submodule update --init --recursive
          bash scripts/ci_one_iter.sh clone

  Build-POC-Cuda:
    name: Build diopi_poc cuda
    needs: [Clone]
    runs-on: tps-pytorch-ci
    steps:
      - name: Build dipu-poc
        run: |
          set -e
          cd ${NV_PVC_PATH}/${GITHUB_RUN_NUMBER} && rm -rf ${GITHUB_JOB} && cp -R dipu_poc ${GITHUB_JOB}  && cd ${GITHUB_JOB}
          source scripts/ci_nv_env.sh
          bash scripts/ci_nv_script.sh build_dipu \
          || ( cd ${NV_PVC_PATH}/${GITHUB_RUN_NUMBER}/ && rm -rf ${GITHUB_JOB} && exit 1 )

  Test-Cuda:
    name: test-cuda
    needs: [Build-POC-Cuda]
    runs-on: tps-pytorch-ci
    steps:
      - name: Run-test
        run: |
          set -e
          cd ${NV_PVC_PATH}/${GITHUB_RUN_NUMBER}/ && cd Build-POC-Cuda
          source scripts/ci_nv_env.sh
          sh tests/run_nv_tests.sh

  Build-POC-Cuda-Diopi:
    name: Build diopi_poc cuda diopi-main
    needs: [Clone]
    runs-on: tps-pytorch-ci
    steps:
      - name: Build dipu-poc diopi-main
        run: |
          set -e
          cd ${NV_PVC_PATH}/${GITHUB_RUN_NUMBER} && rm -rf ${GITHUB_JOB} && cp -R dipu_poc_diopi ${GITHUB_JOB}  && cd ${GITHUB_JOB}
          source scripts/ci_nv_env.sh
          bash scripts/ci_nv_script.sh build_dipu \
          || ( cd ${NV_PVC_PATH}/${GITHUB_RUN_NUMBER}/ && rm -rf ${GITHUB_JOB} && exit 1 )

  Test-Cuda-Diopi:
    name: test-cuda-diopi-main
    needs: [Build-POC-Cuda-Diopi]
    runs-on: tps-pytorch-ci
    steps:
      - name: Run-test
        run: |
          set -e
          cd ${NV_PVC_PATH}/${GITHUB_RUN_NUMBER}/ && cd Build-POC-Cuda-Diopi
          source scripts/ci_nv_env.sh
          sh tests/run_nv_tests.sh && cd ${NV_PVC_PATH}/${GITHUB_RUN_NUMBER}/ && rm -rf Build-POC-Cuda-Diopi \
          || ( cd ${NV_PVC_PATH}/${GITHUB_RUN_NUMBER}/ && rm -rf Build-POC-Cuda-Diopi && exit 1 )

  Test-One-Iter_Cuda:
    name: test-one-iter-cuda
    needs: [Build-POC-Cuda]
    runs-on: tps-pytorch-ci
    steps:
      - name: build some env
        run: |
          set -e
          cd ${NV_PVC_PATH}/${GITHUB_RUN_NUMBER}/ && cd Build-POC-Cuda
          source scripts/ci_nv_env.sh
          basic_path=${NV_PVC_PATH}/${GITHUB_RUN_NUMBER}/Build-POC-Cuda
          export PYTHONPATH=${basic_path}/mmengine:$PYTHONPATH
          export PYTHONPATH=${basic_path}/mmcv:$PYTHONPATH
          bash scripts/ci_one_iter.sh build_cuda

      - name: run-one-iter-tools
        run: |
          set -e
          cd ${NV_PVC_PATH}/${GITHUB_RUN_NUMBER}/ && cd Build-POC-Cuda
          source scripts/ci_nv_env.sh
          basic_path=${NV_PVC_PATH}/${GITHUB_RUN_NUMBER}/Build-POC-Cuda
          export PYTHONPATH=${basic_path}/mmpose:$PYTHONPATH
          export PYTHONPATH=${basic_path}/mmaction2:$PYTHONPATH
          export PYTHONPATH=${basic_path}/mmpretrain:$PYTHONPATH
          export PYTHONPATH=${basic_path}/mmocr:$PYTHONPATH
          export PYTHONPATH=${basic_path}/mmsegmentation:$PYTHONPATH
          export PYTHONPATH=${basic_path}/mmdetection3d:$PYTHONPATH
          export PYTHONPATH=${basic_path}/mmdetection:$PYTHONPATH
          export PYTHONPATH=${basic_path}/mmagic:$PYTHONPATH
          export PYTHONPATH=${basic_path}/data/stable-diffusion-v1-5:$PYTHONPATH
          export PYTHONPATH=${basic_path}/mmagic/mmagic/models/editors/stable_diffusion:$PYTHONPATH
          export PYTHONPATH=${basic_path}/mmengine:$PYTHONPATH
          export PYTHONPATH=${basic_path}/SMART/tools/one_iter_tool/one_iter:$PYTHONPATH
          export PYTHONPATH=/nvme/share/share/platform/env/miniconda3.8/envs/pt2.0_diopi/mmcvs/9b1209f:$PYTHONPATH
          echo  "python path : $PYTHONPATH"
          bash scripts/ci_nv_run_one_iter.sh && rm -rf one_iter_data || (rm -rf one_iter_data && exit 1)
