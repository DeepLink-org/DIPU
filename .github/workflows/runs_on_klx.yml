name: dipu ci on klx
on:
  workflow_dispatch:
  schedule:
    - cron: '10 22 * * *'
  pull_request:
    paths:
      - ".github/workflows/runs_on_klx.yml"
      - "dipu/torch_dipu/csrc_dipu/vendor/kunlunxin/*"
env:
  DEEPLINK_PATH: '/mnt/cache/share/deeplinkci/github/${{ github.repository }}'


jobs:
  checkout-code:
    name: checkout code
    runs-on: tps-klx-ci
    steps:
      - name: Checkout Code
        uses: DeepLink-org/deeplink.framework/.github/actions/checkout-code@main
      - name: add mmlab_pack
        run: |
          set -e
          cd ${DEEPLINK_PATH}/${GITHUB_RUN_NUMBER}/source/dipu
          bash /home/deeplink/rsync/sourcecode/update_code.sh
          rsync -a /home/deeplink/rsync/sourcecode/mmlab_pack . && cd mmlab_pack
          bash ${DEEPLINK_PATH}/${GITHUB_RUN_NUMBER}/source/dipu/scripts/ci/ci_one_iter.sh clone
          cd ${DEEPLINK_PATH}/${GITHUB_RUN_NUMBER}/source-main/dipu/third_party && rm -rf DIOPI && git clone https://github.com/DeepLink-org/DIOPI.git

  Build-Kunlunxin:
    name: Build-Kunlunxin
    needs: [checkout-code]
    runs-on: tps-klx-ci
    steps:
      - name: Build dipu
        run: |
          set -ex
          cd ${DEEPLINK_PATH}/${GITHUB_RUN_NUMBER}/ && rm -rf ${GITHUB_JOB} && cp -R source ${GITHUB_JOB}  && cd ${GITHUB_JOB}/dipu
          source scripts/ci/kunlunxin/ci_kunlunxin_env.sh
          python setup.py build_ext -i \
          || ( cd ${DEEPLINK_PATH}/${GITHUB_RUN_NUMBER}/ && rm -rf ${GITHUB_JOB} && exit 1 )

  Test-Kunlunxin:
    name: Test-Kunlunxin
    needs: [Build-Kunlunxin]
    runs-on: tps-klx-ci
    steps:
      - name: Run a test
        run: |
          set -ex
          cd ${DEEPLINK_PATH}/${GITHUB_RUN_NUMBER}/Build-Kunlunxin/dipu
          bash tests/run_kunlunxin_tests.sh

  Test-One-Iter-Kunlunxin:
    name: Test-One-Iter-Kunlunxin
    needs: [Build-Kunlunxin]
    runs-on: tps-klx-ci
    steps:
      - name: Build some env
        run: |
          set -ex
          cd ${DEEPLINK_PATH}/${GITHUB_RUN_NUMBER}/Build-Kunlunxin/dipu/mmlab_pack
          bash ../scripts/ci/ci_one_iter.sh build_kunlunxin

      - name: Run one iter tools
        run: |
          set -ex
          cd ${DEEPLINK_PATH}/${GITHUB_RUN_NUMBER}/Build-Kunlunxin/dipu
          source scripts/ci/kunlunxin/ci_kunlunxin_env.sh
          basic_path=${DEEPLINK_PATH}/${GITHUB_RUN_NUMBER}/Build-Kunlunxin/dipu/mmlab_pack
          source scripts/ci/ci_one_iter.sh export_pythonpath_kunlunxin ${basic_path}
          cd mmlab_pack
          rm -rf one_iter_data
          XDNN_CONV_GEMM_DTYPE=int16 XPUAPI_DEBUG_CUSTOM_OP_LEVEL="broadcast_add,0x11" \
          python ../scripts/ci/ci_run_one_iter.py kunlunxin "" "" "" && rm -rf one_iter_data || (rm -rf one_iter_data && exit 1)

      - name: Perform cleanup one iter data
        if: always()
        run: |
          set -ex
          cd ${DEEPLINK_PATH}/${GITHUB_RUN_NUMBER}/Build-Kunlunxin/dipu/mmlab_pack
          rm -rf one_iter_data
          touch one_iter_data # 用于占位，防止创建新的 one_iter_data 文件夹

      - name: Check for failure
        if: ${{ failure() }}
        run: exit 1